import axios from "axios";

export interface Stop {
  id?: number;  // Make id optional since it's generated by backend
  name: string;
  lat: number;
  lng: number;
  plannedTime: string;
}

export interface TripSummary {
  _id: string;
  name: string;
  createdAt: string;
}

export interface TripDetail {
  _id: string;
  name: string;
  createdAt: string;
  stops: Stop[];
  routes: number[][][];
}

export const getTrips = async (): Promise<TripSummary[]> => {
  const response = await axios.get("/api/trips");
  return response.data;
}

export const getTripById = async (tripId: string): Promise<TripDetail> => {
  const response = await axios.get(`/api/trips/${tripId}`);
  return response.data;
}

export const createTrip = async ({name}: {name: string}): Promise<TripDetail> => {
  const response = await axios.post(`/api/trips`, {
    name,
    stops: [],
    routes: []
  });
  return response.data;
}

export const deleteTripById = async (tripId: string): Promise<void> => {
  await axios.delete(`/api/trips/${tripId}`);
}

export const addStopToTrip = async (
  tripId: string,
  stop: Pick<Stop, 'name' | 'lat' | 'lng' | 'plannedTime'>
): Promise<TripDetail> => {
  const response = await axios.put(`/api/trips/${tripId}/stops`, stop);
  return response.data;
}

export const deleteStopFromTrip = async (tripId: string, stopId: number): Promise<TripDetail> => {
  const response = await axios.delete(`/api/trips/${tripId}/stops/${stopId}`);
  return response.data;
};